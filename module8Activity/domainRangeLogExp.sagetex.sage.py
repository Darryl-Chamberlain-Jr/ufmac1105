## -*- encoding: utf-8 -*-

# This file was *autogenerated* from the file domainRangeLogExp.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_135 = Integer(135); _sage_const_137 = Integer(137); _sage_const_152 = Integer(152); _sage_const_150 = Integer(150); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_56 = Integer(56); _sage_const_122 = Integer(122); _sage_const_120 = Integer(120); _sage_const_98 = Integer(98); _sage_const_105 = Integer(105); _sage_const_107 = Integer(107)## This file (domainRangeLogExp.sagetex.sage) was *autogenerated* from domainRangeLogExp.tex with sagetex.sty version 2015/08/26 v3.0-92d9f7a.
import sagetex
_st_ = sagetex.SageTeXProcessor('domainRangeLogExp', version='2015/08/26 v3.0-92d9f7a', version_check=True)
_st_.current_tex_line = _sage_const_56 
_st_.blockbegin()
try:
 x = var("x")
 
 def constructFunction(type, direction, domainOrRange):
     listWholes = ZZ.range(_sage_const_9 )
     uniqueList = Subsets([listWholes[i] + _sage_const_2  for i in range(_sage_const_9 )], _sage_const_3 )
     base, horShift, vertShift = uniqueList.random_element()
     #
     if domainOrRange == "Domain" and type == "Exp":
         leadingSign = (-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
         function = leadingSign * (base)**(x-horShift) + vertShift
         valueToReturn = "NA"
     elif direction == "Left" and domainOrRange == "Range" and type == "Exp":
         function = - (base)**(x-horShift) + vertShift
         valueToReturn = vertShift
     elif direction == "Right" and domainOrRange == "Range" and type == "Exp":
         function = (base)**(x-horShift) + vertShift
         valueToReturn = vertShift
     elif domainOrRange == "Range" and type == "Log":
         leadingSign = (-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
         function = leadingSign * log(x-horShift) + vertShift
         valueToReturn = "NA"
     elif direction == "Left" and domainOrRange == "Domain" and type == "Log":
         function = - log(x-horShift) + vertShift
         valueToReturn = horShift
     elif direction == "Right" and domainOrRange == "Domain" and type == "Log":
         function = log(x-horShift) + vertShift
         valueToReturn = horShift
     else:
         function = x
         valueToReturn = "Nothing"
     return [function, valueToReturn]
 
 def leftOrRight():
     list = ["Left", "Right"]
     return list[ZZ.random_element(_sage_const_2 )]
 
 ##### END OF DEFINITIONS #####
 function1, answer1 = constructFunction("Exp", leftOrRight, "Domain")
 function2, answer2 = constructFunction("Exp", "Left", "Range")
 function3, answer3 = constructFunction("Log", "Right", "Domain")
 function4, answer4 = constructFunction("Log", leftOrRight, "Range")
except:
 _st_.goboom(_sage_const_98 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_105 
 _st_.inline(_sage_const_0 , latex(function1))
except:
 _st_.goboom(_sage_const_105 )
try:
 _st_.current_tex_line = _sage_const_107 
 _st_.inline(_sage_const_1 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_107 )
try:
 _st_.current_tex_line = _sage_const_107 
 _st_.inline(_sage_const_2 , latex(Infinity))
except:
 _st_.goboom(_sage_const_107 )
try:
 _st_.current_tex_line = _sage_const_120 
 _st_.inline(_sage_const_3 , latex(function2))
except:
 _st_.goboom(_sage_const_120 )
try:
 _st_.current_tex_line = _sage_const_122 
 _st_.inline(_sage_const_4 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_122 )
try:
 _st_.current_tex_line = _sage_const_122 
 _st_.inline(_sage_const_5 , latex(answer2))
except:
 _st_.goboom(_sage_const_122 )
try:
 _st_.current_tex_line = _sage_const_135 
 _st_.inline(_sage_const_6 , latex(function3))
except:
 _st_.goboom(_sage_const_135 )
try:
 _st_.current_tex_line = _sage_const_137 
 _st_.inline(_sage_const_7 , latex(answer3))
except:
 _st_.goboom(_sage_const_137 )
try:
 _st_.current_tex_line = _sage_const_137 
 _st_.inline(_sage_const_8 , latex(Infinity))
except:
 _st_.goboom(_sage_const_137 )
try:
 _st_.current_tex_line = _sage_const_150 
 _st_.inline(_sage_const_9 , latex(function4))
except:
 _st_.goboom(_sage_const_150 )
try:
 _st_.current_tex_line = _sage_const_152 
 _st_.inline(_sage_const_10 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_152 )
try:
 _st_.current_tex_line = _sage_const_152 
 _st_.inline(_sage_const_11 , latex(Infinity))
except:
 _st_.goboom(_sage_const_152 )
_st_.endofdoc()

