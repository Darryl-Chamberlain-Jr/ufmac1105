## -*- encoding: utf-8 -*-


# This file was *autogenerated* from the file evaluateLimit.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_57 = Integer(57); _sage_const_0 = Integer(0); _sage_const_61 = Integer(61); _sage_const_1 = Integer(1); _sage_const_72 = Integer(72); _sage_const_2 = Integer(2); _sage_const_78 = Integer(78); _sage_const_3 = Integer(3); _sage_const_80 = Integer(80); _sage_const_4 = Integer(4); _sage_const_91 = Integer(91); _sage_const_5 = Integer(5); _sage_const_99 = Integer(99); _sage_const_6 = Integer(6); _sage_const_110 = Integer(110); _sage_const_7 = Integer(7); _sage_const_120 = Integer(120); _sage_const_8 = Integer(8); _sage_const_125 = Integer(125); _sage_const_149 = Integer(149); _sage_const_152 = Integer(152); _sage_const_9 = Integer(9); _sage_const_10 = Integer(10); _sage_const_154 = Integer(154); _sage_const_11 = Integer(11); _sage_const_156 = Integer(156); _sage_const_12 = Integer(12); _sage_const_13 = Integer(13); _sage_const_158 = Integer(158); _sage_const_14 = Integer(14); _sage_const_15 = Integer(15); _sage_const_160 = Integer(160); _sage_const_16 = Integer(16); _sage_const_164 = Integer(164); _sage_const_184 = Integer(184); _sage_const_187 = Integer(187); _sage_const_17 = Integer(17); _sage_const_18 = Integer(18); _sage_const_189 = Integer(189); _sage_const_19 = Integer(19); _sage_const_191 = Integer(191); _sage_const_20 = Integer(20); _sage_const_193 = Integer(193); _sage_const_21 = Integer(21); _sage_const_22 = Integer(22); _sage_const_195 = Integer(195); _sage_const_23 = Integer(23); _sage_const_198 = Integer(198); _sage_const_203 = Integer(203); _sage_const_205 = Integer(205); _sage_const_24 = Integer(24); _sage_const_25 = Integer(25); _sage_const_26 = Integer(26); _sage_const_208 = Integer(208); _sage_const_27 = Integer(27); _sage_const_212 = Integer(212); _sage_const_218 = Integer(218); _sage_const_220 = Integer(220); _sage_const_28 = Integer(28); _sage_const_29 = Integer(29); _sage_const_30 = Integer(30); _sage_const_31 = Integer(31); _sage_const_32 = Integer(32); _sage_const_223 = Integer(223); _sage_const_33 = Integer(33)## This file (evaluateLimit.sagetex.sage) was *autogenerated* from evaluateLimit.tex with sagetex.sty version 2019/11/14 v3.4.
import sagetex
_st_ = sagetex.SageTeXProcessor('evaluateLimit', version='2019/11/14 v3.4', version_check=True)
try:
 _st_.current_tex_line = _sage_const_57 
 _st_.inline(_sage_const_0 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_57 )
try:
 _st_.current_tex_line = _sage_const_61 
 _st_.inline(_sage_const_1 , latex(Infinity))
except:
 _st_.goboom(_sage_const_61 )
try:
 _st_.current_tex_line = _sage_const_72 
 _st_.inline(_sage_const_2 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_72 )
try:
 _st_.current_tex_line = _sage_const_78 
 _st_.inline(_sage_const_3 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_78 )
try:
 _st_.current_tex_line = _sage_const_80 
 _st_.inline(_sage_const_4 , latex(Infinity))
except:
 _st_.goboom(_sage_const_80 )
try:
 _st_.current_tex_line = _sage_const_91 
 _st_.inline(_sage_const_5 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_91 )
try:
 _st_.current_tex_line = _sage_const_99 
 _st_.inline(_sage_const_6 , latex(Infinity))
except:
 _st_.goboom(_sage_const_99 )
try:
 _st_.current_tex_line = _sage_const_110 
 _st_.inline(_sage_const_7 , latex(Infinity))
except:
 _st_.goboom(_sage_const_110 )
try:
 _st_.current_tex_line = _sage_const_120 
 _st_.inline(_sage_const_8 , latex(-Infinity))
except:
 _st_.goboom(_sage_const_120 )
_st_.current_tex_line = _sage_const_125 
_st_.blockbegin()
try:
 factor5A = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
 factor5B = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
 value5A = solve(factor5A == _sage_const_0 , x)[_sage_const_0 ].rhs()
 value5B = solve(factor5B == _sage_const_0 , x)[_sage_const_0 ].rhs()
 while value5A == value5B:
     factor5A = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
     factor5B = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
     value5A = solve(factor5A == _sage_const_0 , x)[_sage_const_0 ].rhs()
     value5B = solve(factor5B == _sage_const_0 , x)[_sage_const_0 ].rhs()
 numeratorOnDisplay5 = factor5A*factor5B
 disguiseDenominator5 = (-_sage_const_1 )**ZZ.random_element(_sage_const_2 ) * ZZ.random_element(_sage_const_2 , _sage_const_5 )
 denominatorOnDisplay5 = disguiseDenominator5 * factor5A
 function5 = numeratorOnDisplay5/denominatorOnDisplay5
 #
 if disguiseDenominator5 > _sage_const_0 :
     limitAtNegInfty5 = -Infinity
     limitAtInfty5 = Infinity
 else:
     limitAtNegInfty5 = Infinity
     limitAtInfty5 = -Infinity
 #
 limitAtValue5A = factor5B(x = value5A) / disguiseDenominator5
 limitAtValue5B = _sage_const_0 
except:
 _st_.goboom(_sage_const_149 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_152 
 _st_.inline(_sage_const_9 , latex(numeratorOnDisplay5))
except:
 _st_.goboom(_sage_const_152 )
try:
 _st_.current_tex_line = _sage_const_152 
 _st_.inline(_sage_const_10 , latex(denominatorOnDisplay5))
except:
 _st_.goboom(_sage_const_152 )
try:
 _st_.current_tex_line = _sage_const_154 
 _st_.inline(_sage_const_11 , latex(limitAtNegInfty5))
except:
 _st_.goboom(_sage_const_154 )
try:
 _st_.current_tex_line = _sage_const_156 
 _st_.inline(_sage_const_12 , latex(value5A))
except:
 _st_.goboom(_sage_const_156 )
try:
 _st_.current_tex_line = _sage_const_156 
 _st_.inline(_sage_const_13 , latex(limitAtValue5A))
except:
 _st_.goboom(_sage_const_156 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_14 , latex(value5B))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_158 
 _st_.inline(_sage_const_15 , latex(limitAtValue5B))
except:
 _st_.goboom(_sage_const_158 )
try:
 _st_.current_tex_line = _sage_const_160 
 _st_.inline(_sage_const_16 , latex(limitAtInfty5))
except:
 _st_.goboom(_sage_const_160 )
_st_.current_tex_line = _sage_const_164 
_st_.blockbegin()
try:
 factor6A = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
 factor6B = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
 value6A = solve(factor6A == _sage_const_0 , x)[_sage_const_0 ].rhs()
 value6B = solve(factor6B == _sage_const_0 , x)[_sage_const_0 ].rhs()
 while value6A == value6B:
     factor6A = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
     factor6B = ZZ.random_element(_sage_const_2 , _sage_const_5 )*x - ZZ.random_element(_sage_const_2 , _sage_const_5 )*(-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
     value6A = solve(factor6A == _sage_const_0 , x)[_sage_const_0 ].rhs()
     value6B = solve(factor6B == _sage_const_0 , x)[_sage_const_0 ].rhs()
 numeratorOnDisplay6 = factor6B
 disguiseDenominator6 = (-_sage_const_1 )**ZZ.random_element(_sage_const_2 ) * ZZ.random_element(_sage_const_2 , _sage_const_5 )
 denominatorOnDisplay6 = disguiseDenominator6 * factor6A * factor6B
 function6 = numeratorOnDisplay6/denominatorOnDisplay6
 #
 limitAtNegInfty6 = _sage_const_0 
 limitAtInfty6 = _sage_const_0 
 #
 limitAtValue6A = "DNE"
 limitAtValue6B = _sage_const_1 /(disguiseDenominator6 * factor6A(x = value6B))
except:
 _st_.goboom(_sage_const_184 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_187 
 _st_.inline(_sage_const_17 , latex(numeratorOnDisplay6))
except:
 _st_.goboom(_sage_const_187 )
try:
 _st_.current_tex_line = _sage_const_187 
 _st_.inline(_sage_const_18 , latex(denominatorOnDisplay6))
except:
 _st_.goboom(_sage_const_187 )
try:
 _st_.current_tex_line = _sage_const_189 
 _st_.inline(_sage_const_19 , latex(limitAtNegInfty6))
except:
 _st_.goboom(_sage_const_189 )
try:
 _st_.current_tex_line = _sage_const_191 
 _st_.inline(_sage_const_20 , latex(value6A))
except:
 _st_.goboom(_sage_const_191 )
try:
 _st_.current_tex_line = _sage_const_193 
 _st_.inline(_sage_const_21 , latex(value6B))
except:
 _st_.goboom(_sage_const_193 )
try:
 _st_.current_tex_line = _sage_const_193 
 _st_.inline(_sage_const_22 , latex(limitAtValue6B))
except:
 _st_.goboom(_sage_const_193 )
try:
 _st_.current_tex_line = _sage_const_195 
 _st_.inline(_sage_const_23 , latex(limitAtInfty6))
except:
 _st_.goboom(_sage_const_195 )
_st_.current_tex_line = _sage_const_198 
_st_.blockbegin()
try:
 # Equation: $\lim_{x \rightarrow 0} (ax+1)^(1/x) = e^a$
 a6 = ZZ.random_element(_sage_const_1 , _sage_const_5 )
 equation6 = (a6*x + _sage_const_1 )**(_sage_const_1 /x)
 limitAtEquation6 = [_sage_const_0 , equation6, exp(a6)]
except:
 _st_.goboom(_sage_const_203 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_205 
 _st_.inline(_sage_const_24 , latex(limitAtEquation6[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_205 )
try:
 _st_.current_tex_line = _sage_const_205 
 _st_.inline(_sage_const_25 , latex(limitAtEquation6[_sage_const_1 ]))
except:
 _st_.goboom(_sage_const_205 )
try:
 _st_.current_tex_line = _sage_const_205 
 _st_.inline(_sage_const_26 , latex(limitAtEquation6[_sage_const_2 ]))
except:
 _st_.goboom(_sage_const_205 )
try:
 _st_.current_tex_line = _sage_const_208 
 _st_.inline(_sage_const_27 , latex(limitAtEquation6[_sage_const_0 ]))
except:
 _st_.goboom(_sage_const_208 )
_st_.current_tex_line = _sage_const_212 
_st_.blockbegin()
try:
 # Equation: $lim_{x \rightarrow eqA} \frac{\sqrt{x-eqC} - eqB}{x-eqA}$
 eqB = ZZ.random_element(_sage_const_2 , _sage_const_6 )
 eqC = ZZ.random_element(_sage_const_1 , _sage_const_5 )
 eqA = eqB**_sage_const_2  + eqC
 limitAtEquation7 = _sage_const_1 /(_sage_const_2 *eqB)
except:
 _st_.goboom(_sage_const_218 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_220 
 _st_.inline(_sage_const_28 , latex(eqA))
except:
 _st_.goboom(_sage_const_220 )
try:
 _st_.current_tex_line = _sage_const_220 
 _st_.inline(_sage_const_29 , latex(eqC))
except:
 _st_.goboom(_sage_const_220 )
try:
 _st_.current_tex_line = _sage_const_220 
 _st_.inline(_sage_const_30 , latex(eqB))
except:
 _st_.goboom(_sage_const_220 )
try:
 _st_.current_tex_line = _sage_const_220 
 _st_.inline(_sage_const_31 , latex(eqA))
except:
 _st_.goboom(_sage_const_220 )
try:
 _st_.current_tex_line = _sage_const_220 
 _st_.inline(_sage_const_32 , latex(limitAtEquation7))
except:
 _st_.goboom(_sage_const_220 )
try:
 _st_.current_tex_line = _sage_const_223 
 _st_.inline(_sage_const_33 , latex(eqA))
except:
 _st_.goboom(_sage_const_223 )
_st_.endofdoc()

