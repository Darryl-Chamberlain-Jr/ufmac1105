## This file (endAndZeroBehavior.sage) was *autogenerated* from the file endAndZeroBehavior.tex.
import sagetex
_st_ = sagetex.SageTeXProcessor('endAndZeroBehavior')
_st_.blockbegin()
try:
 x = var("x")
 def maybeMakeNegative(natural):
     integer = (-1)**ZZ.random_element(2)
     return integer
 
 def listZeros(factor1, factor2):
     z0 = factor1
     z1 = -factor1
     z2 = factor2
     z3 = -factor2
     return [z0, z1, z2, z3]
 
 def generateCoefficientsAndZeros():
     leadingCoefficient = maybeMakeNegative(ZZ.random_element(2, 10))
     factor1 = ZZ.random_element(2, 10)
     factor2 = ZZ.random_element(2, 10)
     while factor1 == factor2:
         factor1 = ZZ.random_element(2, 10)
         factor2 = ZZ.random_element(2, 10)
     chooseZero = ZZ.random_element(2)
     if chooseZero == 0:
         zeroOnDisplay = -factor1
         e0 = ZZ.random_element(1, 4)
         e1 = e0 + 2 * ZZ.random_element(1, 4) - 1
         e2 = ZZ.random_element(1, 4)
         e3 = e2 + ZZ.random_element(0, 3)
     else:
         zeroOnDisplay = -factor2
         e0 = ZZ.random_element(1, 4)
         e1 = e0 + ZZ.random_element(0, 3)
         e2 = ZZ.random_element(1, 4)
         e3 = e2 + 2 * ZZ.random_element(1, 4) - 1
     zeros = listZeros(factor1, factor2)
     exponents = e0, e1, e2, e3
     return [leadingCoefficient, zeros, exponents, zeroOnDisplay]
 
 def displayPolynomial(leadingCoefficient, zeros, exponents):
     z0, z1, z2, z3 = zeros
     e0, e1, e2, e3 = exponents
     polynomial = leadingCoefficient * (x - z0)**e0 * (x - z1)**e1 * (x - z2)**e2 * (x - z3)**e3
     return polynomial
 
 def endBehaviorAnswer(leadingCoefficient, exponents):
     e0, e1, e2, e3 = exponents
     evenOrOdd = (e0 + e1 + e2 + e3) % 2
     if leadingCoefficient < 0 and evenOrOdd == 1:
         answer = "A"
     elif leadingCoefficient < 0 and evenOrOdd == 0:
         answer = "B"
     elif leadingCoefficient > 0 and evenOrOdd == 1:
         answer = "C"
     elif leadingCoefficient > 0 and evenOrOdd == 0:
         answer = "D"
     else:
         answer = "Broken"
     return answer
 
 def zeroBehaviorAnswer(polynomial, zeroOnDisplay, exponentOnDisplay):
     nearZero = zeroOnDisplay - 0.5
     yValue = polynomial(x = nearZero)
     evenOrOdd = exponentOnDisplay % 2
     if yValue > 0 and evenOrOdd == 0:
         answer = "EvenPositive"
     elif yValue > 0 and evenOrOdd == 1:
         answer = "OddNegative"
     elif yValue < 0 and evenOrOdd == 0:
         answer = "EvenNegative"
     else:
         answer = "OddPositive"
     return answer
 
 def findDisplayExponent(zeroOnDisplay, zeros, exponents):
     z0, z1, z2, z3 = zeros
     e0, e1, e2, e3 = exponents
     if zeroOnDisplay == z0:
         return e0
     elif zeroOnDisplay == z1:
         return e1
     elif zeroOnDisplay == z2:
         return e2
     else:
         return e3
 
 ### Question 2 - Answer B ###
 leadingCoefficient2, zeros2, exponents2, zeroOnDisplay2 = generateCoefficientsAndZeros()
 polynomial2 = displayPolynomial(leadingCoefficient2, zeros2, exponents2)
 answer2 = endBehaviorAnswer(leadingCoefficient2, exponents2)
 while answer2 == "A" or answer2 == "C" or answer2 == "D":
     leadingCoefficient2, zeros2, exponents2, zeroOnDisplay2 = generateCoefficientsAndZeros()
     polynomial2 = displayPolynomial(leadingCoefficient2, zeros2, exponents2)
     answer2 = endBehaviorAnswer(leadingCoefficient2, exponents2)
 
 ### Question 3 - Answer D ###
 leadingCoefficient3, zeros3, exponents3, zeroOnDisplay3 = generateCoefficientsAndZeros()
 polynomial3 = displayPolynomial(leadingCoefficient3, zeros3, exponents3)
 answer3 = endBehaviorAnswer(leadingCoefficient3, exponents3)
 while answer3 == "A" or answer3 == "B" or answer3 == "C":
     leadingCoefficient3, zeros3, exponents3, zeroOnDisplay3 = generateCoefficientsAndZeros()
     polynomial3 = displayPolynomial(leadingCoefficient3, zeros3, exponents3)
     answer3 = endBehaviorAnswer(leadingCoefficient3, exponents3)
 
 ### Question 4 - Answer A ###
 leadingCoefficient4, zeros4, exponents4, zeroOnDisplay4 = generateCoefficientsAndZeros()
 polynomial4 = displayPolynomial(leadingCoefficient4, zeros4, exponents4)
 answer4 = endBehaviorAnswer(leadingCoefficient4, exponents4)
 while answer4 == "B" or answer4 == "C" or answer4 == "D":
     leadingCoefficient4, zeros4, exponents4, zeroOnDisplay4 = generateCoefficientsAndZeros()
     polynomial4 = displayPolynomial(leadingCoefficient4, zeros4, exponents4)
     answer4 = endBehaviorAnswer(leadingCoefficient4, exponents4)
 
 ### Question 5 - Answer C ###
 leadingCoefficient5, zeros5, exponents5, zeroOnDisplay5 = generateCoefficientsAndZeros()
 polynomial5 = displayPolynomial(leadingCoefficient5, zeros5, exponents5)
 answer5 = endBehaviorAnswer(leadingCoefficient5, exponents5)
 while answer5 == "A" or answer5 == "B" or answer5 == "D":
     leadingCoefficient5, zeros5, exponents5, zeroOnDisplay5 = generateCoefficientsAndZeros()
     polynomial5 = displayPolynomial(leadingCoefficient5, zeros5, exponents5)
     answer5 = endBehaviorAnswer(leadingCoefficient5, exponents5)
 
 ##### Question 6 - Odd Negative #####
 leadingCoefficient6, zeros6, exponents6, zeroOnDisplay6 = generateCoefficientsAndZeros()
 polynomial6 = displayPolynomial(leadingCoefficient6, zeros6, exponents6)
 exponentOnDisplay6 = findDisplayExponent(zeroOnDisplay6, zeros6, exponents6)
 answer6 = zeroBehaviorAnswer(polynomial6, zeroOnDisplay6, exponentOnDisplay6)
 print answer6
 while answer6 == "EvenPositive" or answer6 == "EvenNegative" or answer6 == "OddPositive":
     leadingCoefficient6, zeros6, exponents6, zeroOnDisplay6 = generateCoefficientsAndZeros()
     polynomial6 = displayPolynomial(leadingCoefficient6, zeros6, exponents6)
     exponentOnDisplay6 = findDisplayExponent(zeroOnDisplay6, zeros6, exponents6)
     answer6 =  zeroBehaviorAnswer(polynomial6, zeroOnDisplay6, exponentOnDisplay6)
 
 ##### Question 7 - Even Negative #####
 leadingCoefficient7, zeros7, exponents7, zeroOnDisplay7 = generateCoefficientsAndZeros()
 polynomial7 = displayPolynomial(leadingCoefficient7, zeros7, exponents7)
 exponentOnDisplay7 = findDisplayExponent(zeroOnDisplay7, zeros7, exponents7)
 answer7 = zeroBehaviorAnswer(polynomial7, zeroOnDisplay7, exponentOnDisplay7)
 while answer7 == "EvenPositive" or answer7 == "OddNegative" or answer7 == "OddPositive":
     leadingCoefficient7, zeros7, exponents7, zeroOnDisplay7 = generateCoefficientsAndZeros()
     polynomial7 = displayPolynomial(leadingCoefficient7, zeros7, exponents7)
     exponentOnDisplay7 = findDisplayExponent(zeroOnDisplay7, zeros7, exponents7)
     answer7 =  zeroBehaviorAnswer(polynomial7, zeroOnDisplay7, exponentOnDisplay7)
 
 ##### Question 8 - Even Positive #####
 leadingCoefficient8, zeros8, exponents8, zeroOnDisplay8 = generateCoefficientsAndZeros()
 polynomial8 = displayPolynomial(leadingCoefficient8, zeros8, exponents8)
 exponentOnDisplay8 = findDisplayExponent(zeroOnDisplay8, zeros8, exponents8)
 answer8 = zeroBehaviorAnswer(polynomial8, zeroOnDisplay8, exponentOnDisplay8)
 while answer8 == "EvenNegative" or answer8 == "OddNegative" or answer8 == "OddPositive":
     leadingCoefficient8, zeros8, exponents8, zeroOnDisplay8 = generateCoefficientsAndZeros()
     polynomial8 = displayPolynomial(leadingCoefficient8, zeros8, exponents8)
     exponentOnDisplay8 = findDisplayExponent(zeroOnDisplay8, zeros8, exponents8)
     answer8 =  zeroBehaviorAnswer(polynomial8, zeroOnDisplay8, exponentOnDisplay8)
 
 ##### Question 9 - Odd Positive #####
 leadingCoefficient9, zeros9, exponents9, zeroOnDisplay9 = generateCoefficientsAndZeros()
 polynomial9 = displayPolynomial(leadingCoefficient9, zeros9, exponents9)
 exponentOnDisplay9 = findDisplayExponent(zeroOnDisplay9, zeros9, exponents9)
 answer9 = zeroBehaviorAnswer(polynomial9, zeroOnDisplay9, exponentOnDisplay9)
 while answer9 == "EvenPositive" or answer9 == "OddNegative" or answer9 == "EvenNegative":
     leadingCoefficient9, zeros9, exponents9, zeroOnDisplay9 = generateCoefficientsAndZeros()
     polynomial9 = displayPolynomial(leadingCoefficient9, zeros9, exponents9)
     exponentOnDisplay9 = findDisplayExponent(zeroOnDisplay9, zeros9, exponents9)
     answer9 =  zeroBehaviorAnswer(polynomial9, zeroOnDisplay9, exponentOnDisplay9)
except:
 _st_.goboom(194)
_st_.blockend()
try:
 _st_.inline(0, polynomial2)
except:
 _st_.goboom(200)
try:
 _st_.inline(1, polynomial3)
except:
 _st_.goboom(243)
try:
 _st_.inline(2, polynomial4)
except:
 _st_.goboom(286)
try:
 _st_.inline(3, polynomial5)
except:
 _st_.goboom(329)
try:
 _st_.inline(4, zeroOnDisplay6)
except:
 _st_.goboom(370)
try:
 _st_.inline(5, polynomial6)
except:
 _st_.goboom(372)
try:
 _st_.inline(6, zeroOnDisplay7)
except:
 _st_.goboom(413)
try:
 _st_.inline(7, polynomial7)
except:
 _st_.goboom(415)
try:
 _st_.inline(8, zeroOnDisplay8)
except:
 _st_.goboom(456)
try:
 _st_.inline(9, polynomial8)
except:
 _st_.goboom(458)
try:
 _st_.inline(10, zeroOnDisplay9)
except:
 _st_.goboom(499)
try:
 _st_.inline(11, polynomial9)
except:
 _st_.goboom(501)
_st_.endofdoc()
