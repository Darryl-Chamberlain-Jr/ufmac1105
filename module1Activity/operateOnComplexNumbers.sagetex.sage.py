## -*- encoding: utf-8 -*-

# This file was *autogenerated* from the file operateOnComplexNumbers.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_5 = Integer(5); _sage_const_4 = Integer(4); _sage_const_9 = Integer(9); _sage_const_8 = Integer(8); _sage_const_116 = Integer(116); _sage_const_20 = Integer(20); _sage_const_21 = Integer(21); _sage_const_66 = Integer(66); _sage_const_119 = Integer(119); _sage_const_18 = Integer(18); _sage_const_131 = Integer(131); _sage_const_84 = Integer(84); _sage_const_81 = Integer(81); _sage_const_69 = Integer(69); _sage_const_13 = Integer(13); _sage_const_12 = Integer(12); _sage_const_11 = Integer(11); _sage_const_10 = Integer(10); _sage_const_17 = Integer(17); _sage_const_16 = Integer(16); _sage_const_15 = Integer(15); _sage_const_14 = Integer(14); _sage_const_19 = Integer(19); _sage_const_32 = Integer(32); _sage_const_71 = Integer(71); _sage_const_125 = Integer(125); _sage_const_129 = Integer(129); _sage_const_79 = Integer(79)## This file (operateOnComplexNumbers.sagetex.sage) was *autogenerated* from operateOnComplexNumbers.tex with sagetex.sty version 2015/08/26 v3.0-92d9f7a.
import sagetex
_st_ = sagetex.SageTeXProcessor('operateOnComplexNumbers', version='2015/08/26 v3.0-92d9f7a', version_check=True)
_st_.current_tex_line = _sage_const_32 
_st_.blockbegin()
try:
 def maybeMakeNegative(rational):
     maybeNegative = (-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
     rational = maybeNegative * rational
     return rational
 
 def generateProblem():
     listIntegers = range(_sage_const_2 , _sage_const_11 )
     c0, c1, c2, c3 = sample(listIntegers, _sage_const_4 )
     constants = [Integer(maybeMakeNegative(c0)), Integer(c1), Integer(maybeMakeNegative(c2)), Integer(-c3)]
     return constants
 
 def generateSolution(complex1, complex2):
     product = complex1 * complex2
     realPart = round(product.real(), _sage_const_0 )
     imagPart = round(product.imag(), _sage_const_0 )
     product = CC(realPart, imagPart)
     return product
 
 ############ END OF DEFINITIONS ##############
 
 ######### QUESTION 10 ###########
 problem10 = generateProblem()
 a110, b110, a210, b210 = problem10
 complex10A = CC(a110, b110)
 complex10B = CC(a210, b210)
 answer10 = generateSolution(complex10A, complex10B)
 
 ######### QUESTION 11 ###########
 problem11 = generateProblem()
 a111, b111, a211, b211 = problem11
 complex11A = CC(a111, b111)
 complex11B = CC(a211, b211)
 answer11 = generateSolution(complex11A, complex11B)
except:
 _st_.goboom(_sage_const_66 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_69 
 _st_.inline(_sage_const_0 , latex(a110))
except:
 _st_.goboom(_sage_const_69 )
try:
 _st_.current_tex_line = _sage_const_69 
 _st_.inline(_sage_const_1 , latex(b110))
except:
 _st_.goboom(_sage_const_69 )
try:
 _st_.current_tex_line = _sage_const_69 
 _st_.inline(_sage_const_2 , latex(a210))
except:
 _st_.goboom(_sage_const_69 )
try:
 _st_.current_tex_line = _sage_const_69 
 _st_.inline(_sage_const_3 , latex(-b210))
except:
 _st_.goboom(_sage_const_69 )
try:
 _st_.current_tex_line = _sage_const_71 
 _st_.inline(_sage_const_4 , latex(answer10))
except:
 _st_.goboom(_sage_const_71 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_5 , latex(a111))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_6 , latex(b111))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_7 , latex(a211))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_79 
 _st_.inline(_sage_const_8 , latex(-b211))
except:
 _st_.goboom(_sage_const_79 )
try:
 _st_.current_tex_line = _sage_const_81 
 _st_.inline(_sage_const_9 , latex(answer11))
except:
 _st_.goboom(_sage_const_81 )
_st_.current_tex_line = _sage_const_84 
_st_.blockbegin()
try:
 def maybeMakeNegative(rational):
     maybeNegative = (-_sage_const_1 )**ZZ.random_element(_sage_const_2 )
     rational = maybeNegative * rational
     return rational
 
 def generateProblem():
     listIntegers = range(_sage_const_2 , _sage_const_11 )
     c0, c1, c2, c3 = sample(listIntegers, _sage_const_4 )
     constants = [Integer(maybeMakeNegative(c0)), Integer(c1), Integer(maybeMakeNegative(c2)), Integer(-c3)]
     return constants
 
 def generateSolution(complex1, complex2):
     quotient = complex1/complex2
     realPart = quotient.real()
     imagPart = quotient.imag()
     #quotient = CC(realPart, imagPart)
     return [realPart, imagPart]
 
 ######### END OF DEFINITIONS #############
 
 ######## QUESTION 12 ###########
 a112, b112, a212, b212 = generateProblem()
 complex12A = CC(a112, b112)
 complex12B = CC(a212, b212)
 answer12A, answer12B = generateSolution(complex12A, complex12B)
 
 ######## QUESTION 13 ###########
 a113, b113, a213, b213 = generateProblem()
 complex13A = CC(a113, b113)
 complex13B = CC(a213, b213)
 answer13A, answer13B = generateSolution(complex13A, complex13B)
except:
 _st_.goboom(_sage_const_116 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_119 
 _st_.inline(_sage_const_10 , latex(a112))
except:
 _st_.goboom(_sage_const_119 )
try:
 _st_.current_tex_line = _sage_const_119 
 _st_.inline(_sage_const_11 , latex(b112))
except:
 _st_.goboom(_sage_const_119 )
try:
 _st_.current_tex_line = _sage_const_119 
 _st_.inline(_sage_const_12 , latex(a212))
except:
 _st_.goboom(_sage_const_119 )
try:
 _st_.current_tex_line = _sage_const_119 
 _st_.inline(_sage_const_13 , latex(-b212))
except:
 _st_.goboom(_sage_const_119 )
try:
 _st_.current_tex_line = _sage_const_125 
 _st_.inline(_sage_const_14 , latex(answer12A))
except:
 _st_.goboom(_sage_const_125 )
try:
 _st_.current_tex_line = _sage_const_125 
 _st_.inline(_sage_const_15 , latex(answer12B))
except:
 _st_.goboom(_sage_const_125 )
try:
 _st_.current_tex_line = _sage_const_129 
 _st_.inline(_sage_const_16 , latex(a113))
except:
 _st_.goboom(_sage_const_129 )
try:
 _st_.current_tex_line = _sage_const_129 
 _st_.inline(_sage_const_17 , latex(b113))
except:
 _st_.goboom(_sage_const_129 )
try:
 _st_.current_tex_line = _sage_const_129 
 _st_.inline(_sage_const_18 , latex(a213))
except:
 _st_.goboom(_sage_const_129 )
try:
 _st_.current_tex_line = _sage_const_129 
 _st_.inline(_sage_const_19 , latex(-b213))
except:
 _st_.goboom(_sage_const_129 )
try:
 _st_.current_tex_line = _sage_const_131 
 _st_.inline(_sage_const_20 , latex(answer13A))
except:
 _st_.goboom(_sage_const_131 )
try:
 _st_.current_tex_line = _sage_const_131 
 _st_.inline(_sage_const_21 , latex(answer13B))
except:
 _st_.goboom(_sage_const_131 )
_st_.endofdoc()

